- name: create required directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /etc/cni/net.d
    - /opt/cni/bin
    - /opt/containerd
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /var/lib/kubernetes
    - /var/run/kubernetes
    - /etc/kubernetes/manifests
    - /etc/containerd

- name: Install OS Dependencies
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
  loop: "{{ dependencies }}"

- name: Set node subnet from inventory
  ansible.builtin.set_fact:
    node_subnet: "{{ hostvars[inventory_hostname].pod_cidr }}"
  when: hostvars[inventory_hostname].pod_cidr is defined

- name: Render 10-bridge.conf
  ansible.builtin.template:
    src: 10-bridge.conf.j2
    dest: "/home/{{ ssh_target_user }}/10-bridge.conf"
    owner: root
    group: root
    mode: '0644'

##################################################
# Download, Extract, and Install Binaries
##################################################

- name: Download Kubernetes server {{ kubernetes.version }} binaries
  ansible.builtin.get_url:
    url: https://dl.k8s.io/{{ kubernetes.version }}/bin/linux/amd64/{{ item }}
    dest: /opt/
    mode: '0644'
  loop: "{{ binaries.kubernetes_server }}"

- name: Install Kubernetes binaries
  ansible.builtin.copy:
    src: "/opt/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    remote_src: true
    mode: a+x
  loop: "{{ binaries.kubernetes_server }}"

- name: Remove local file
  ansible.builtin.file:
    path: "/opt/{{ item }}"
    state: absent
  loop: "{{ binaries.kubernetes_server }}"

- name: Download cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz
  ansible.builtin.get_url:
    url: https://github.com/containernetworking/plugins/releases/download/{{ kubernetes.components.cni.version }}/cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz
    dest: /opt/
    mode: a+x

- name: Extract cni-plugins tarball
  ansible.builtin.unarchive:
    src: "/opt/cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz"
    dest: /opt/cni/bin/
    remote_src: yes

- name: Delete cni-plugins tarball
  ansible.builtin.file:
    path: "/opt/cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz"
    state: absent

- name: Download crictl-{{ kubernetes.components.crictl.version }}-linux-amd64.tar.gz
  ansible.builtin.get_url:
    url: https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ kubernetes.components.crictl.version }}/crictl-{{ kubernetes.components.crictl.version }}-linux-amd64.tar.gz
    dest: /opt/
    mode: a+x

- name: Extract cri-tools tarball
  ansible.builtin.unarchive:
    src: "/opt/crictl-{{ kubernetes.components.crictl.version }}-linux-amd64.tar.gz"
    dest: /usr/local/bin/
    remote_src: yes

- name: Delete cri-tools tarball
  ansible.builtin.file:
    path: "/opt/crictl-{{ kubernetes.components.crictl.version }}-linux-amd64.tar.gz"
    state: absent

- name: Download runc
  ansible.builtin.get_url:
    url: https://github.com/opencontainers/runc/releases/download/{{ kubernetes.components.runc.version }}/runc.amd64
    dest: /usr/local/bin/runc
    mode: a+x

- name: Download containerd-{{ kubernetes.components.containerd.version }}-linux-amd64.tar.gz
  ansible.builtin.get_url:
    url: https://github.com/containerd/containerd/releases/download/{{ kubernetes.components.containerd.version }}/containerd-{{ kubernetes.components.containerd.version }}-linux-amd64.tar.gz
    dest: /opt/
    mode: a+x

- name: Extract containerd tarball
  ansible.builtin.unarchive:
    src: "/opt/containerd-{{ kubernetes.components.containerd.version }}-linux-amd64.tar.gz"
    dest: /opt/containerd/
    remote_src: yes

- name: Delete containerd tarball
  ansible.builtin.file:
    path: "/opt/containerd-{{ kubernetes.components.containerd.version }}-linux-amd64.tar.gz"
    state: absent


# - name: Copy Kubelet configs
#   ansible.builtin.copy:
#     src: "{{ item }}"
#     dest: "/home/{{ ssh_target_user }}/"
#     owner: root
#     group: root
#     mode: '0644'
#   loop: "{{ configs }}"
#   loop_control:
#     label: "{{ item }}"

# - name: Copy Kubelet services
#   ansible.builtin.copy:
#     src: "{{ item }}"
#     dest: "/home/{{ ssh_target_user }}/"
#     owner: root
#     group: root
#     mode: '0644'
#   loop: "{{ services }}"
#   loop_control:
#     label: "{{ item }}"
