- name: create required directory
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /etc/cni/net.d
    - /opt/cni/bin
    - /opt/containerd
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /var/lib/kubernetes
    - /var/run/kubernetes
    - /etc/kubernetes/manifests
    - /etc/containerd

- name: Set node subnet from inventory
  ansible.builtin.set_fact:
    node_subnet: "{{ hostvars[inventory_hostname].pod_cidr }}"
  when: hostvars[inventory_hostname].pod_cidr is defined

- name: Render 10-bridge.conf
  ansible.builtin.template:
    src: 10-bridge.conf.j2
    dest: "/home/{{ ssh_target_user }}/10-bridge.conf"
    owner: root
    group: root
    mode: '0644'

- name: Download cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz
  ansible.builtin.get_url:
    url: https://github.com/containernetworking/plugins/releases/download/{{ kubernetes.components.cni.version }}/cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz
    dest: /opt/
    mode: '0644'

- name: Extract cni-plugins tarball
  ansible.builtin.unarchive:
    src: "/opt/cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz"
    dest: /opt/cni/bin/
    remote_src: yes

- name: Delete cni-plugins tarball
  ansible.builtin.file:
    path: "/opt/cni-plugins-linux-amd64-{{ kubernetes.components.cni.version }}.tgz"
    state: absent

# - name: Copy Kubelet configs
#   ansible.builtin.copy:
#     src: "{{ item }}"
#     dest: "/home/{{ ssh_target_user }}/"
#     owner: root
#     group: root
#     mode: '0644'
#   loop: "{{ configs }}"
#   loop_control:
#     label: "{{ item }}"

# - name: Copy Kubelet services
#   ansible.builtin.copy:
#     src: "{{ item }}"
#     dest: "/home/{{ ssh_target_user }}/"
#     owner: root
#     group: root
#     mode: '0644'
#   loop: "{{ services }}"
#   loop_control:
#     label: "{{ item }}"
