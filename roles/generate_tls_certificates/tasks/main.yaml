- name: Ensure certificate directory exists
  file:
    path: "{{ cert_dir }}"
    state: directory
    mode: '0755'

- name: Ensure ca.key does not exist
  file:
    path: "{{ cert_dir }}/ca.key"
    state: absent

- name: Generate CA private key
  ansible.builtin.command:
    cmd: openssl genrsa -out ca.key 4096
    chdir: "{{ cert_dir }}"

- name: Generate the CA configuration file, certificate, and private key
  ansible.builtin.command:
    cmd: >
      openssl req -x509 -new -sha512 -noenc -key ca.key -days 3653 -config ca.conf -out ca.crt
    chdir: "{{ cert_dir }}"

- name: Generate Client and server Certificates for each Kubernetes component
  ansible.builtin.command:
    cmd: "openssl genrsa -out {{ item }}.key 4096"
    chdir: "{{ cert_dir }}"
  loop: "{{ certs }}"
  loop_control:
    label: "{{ item }}.key"

- name: Generate Certificate Request for each Kubernetes component
  ansible.builtin.command:
    cmd: "openssl req -new -key \"{{ item }}.key\" -sha256 -config \"ca.conf\" -section \"{{ item }}\" -out \"{{ item }}.csr\""
    chdir: "{{ cert_dir }}"
  loop: "{{ certs }}"
  loop_control:
    label: "{{ item }}.csr"

- name: Generate signed SSL Certificates for each Kubernetes component
  ansible.builtin.command:
    cmd: "openssl x509 -req -days 3653 -in \"{{ item }}.csr\" -copy_extensions copyall -sha256 -CA \"ca.crt\" -CAkey \"ca.key\" -CAcreateserial -out \"{{ item }}.crt\""
    chdir: "{{ cert_dir }}"
  loop: "{{ certs }}"
  loop_control:
    label: "{{ item }}.crs"

- name: Find all generated .crt, .key, and .csr files
  ansible.builtin.find:
    paths: "{{ cert_dir }}"
    patterns: "*.crt,*.key,*.csr"
  register: cert_files

- name: Show generated .crt, .key, and .csr files
  ansible.builtin.debug:
    msg: "{{ item.filename }}"
  loop: "{{ cert_files.files }}"
  when: item.filename is defined